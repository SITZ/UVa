#include <bits/stdc++.h>

using namespace std;

int main()
{
	__asm__ __volatile__(
		"	pushl	%ebp\n"
		"	movl	%esp, %ebp\n"
		"	pushl	%edi\n"
		"	pushl	%esi\n"
		"	pushl	%ebx\n"
		"	subl	$44, %esp\n"
		"	movl	$48, %ecx\n"
		"	.p2align 4,,15\n"
		"L6:\n"
		"	movl	$1, %eax\n"
		"	movl	%eax, _isdig.3(,%ecx,4)\n"
		"	incl	%ecx\n"
		"	cmpl	$57, %ecx\n"
		"	jle	L6\n"
		"	movl	$65536, %eax\n"
		"	movl	%eax, 8(%esp)\n"
		"	movl	$_inbuf.0, %edi\n"
		"	movl	%edi, 4(%esp)\n"
		"	movl	$0, (%esp)\n"
		"	call	read\n"
		"	movb	$0, _inbuf.0(%eax)\n"
		"	movl	$_outbuf.1, %esi\n"
		"	movsbl	_inbuf.0,%ecx\n"
		"	movl	_isdig.3(,%ecx,4), %edx\n"
		"	testl	%edx, %edx\n"
		"	jne	L62\n"
		"	.p2align 4,,15\n"
		"L10:\n"
		"	incl	%edi\n"
		"	movzbl	(%edi), %ecx\n"
		"	movb	%cl, -25(%ebp)\n"
		"	movsbl	%cl,%edx\n"
		"	movl	_isdig.3(,%edx,4), %ebx\n"
		"	testl	%ebx, %ebx\n"
		"	je	L10\n"
		"L47:\n"
		"	movsbl	-25(%ebp),%ecx\n"
		"	subl	$48, %ecx\n"
		"	movl	%ecx, -24(%ebp)\n"
		"	incl	%edi\n"
		"	movzbl	(%edi), %edx\n"
		"	movb	%dl, -25(%ebp)\n"
		"	movsbl	%dl,%eax\n"
		"	movl	_isdig.3(,%eax,4), %ebx\n"
		"	testl	%ebx, %ebx\n"
		"	je	L49\n"
		"	movl	%eax, %edx\n"
		"	.p2align 4,,15\n"
		"L15:\n"
		"	movl	-24(%ebp), %ebx\n"
		"	leal	(%ebx,%ebx,4), %eax\n"
		"	leal	-48(%edx,%eax,2), %ebx\n"
		"	movl	%ebx, -24(%ebp)\n"
		"	incl	%edi\n"
		"	movzbl	(%edi), %edx\n"
		"	movb	%dl, -25(%ebp)\n"
		"	movsbl	%dl,%ecx\n"
		"	movl	%ecx, %edx\n"
		"	movl	_isdig.3(,%ecx,4), %ebx\n"
		"	testl	%ebx, %ebx\n"
		"	jne	L15\n"
		"L49:\n"
		"	movl	$1, -20(%ebp)\n"
		"	movl	-24(%ebp), %eax\n"
		"	cmpl	%eax, -20(%ebp)\n"
		"	jg	L51\n"
		"	.p2align 4,,15\n"
		"L43:\n"
		"	movb	$67, (%esi)\n"
		"	incl	%esi\n"
		"	movb	$97, (%esi)\n"
		"	incl	%esi\n"
		"	movb	$115, (%esi)\n"
		"	incl	%esi\n"
		"	movb	$101, (%esi)\n"
		"	incl	%esi\n"
		"	movb	$32, (%esi)\n"
		"	incl	%esi\n"
		"	movb	$35, (%esi)\n"
		"	incl	%esi\n"
		"	movl	-20(%ebp), %ecx\n"
		"	movl	$_tmp.2, %ebx\n"
		"	testl	%ecx, %ecx\n"
		"	jle	L53\n"
		"	.p2align 4,,15\n"
		"L24:\n"
		"	movl	$1717986919, %eax\n"
		"	imull	%ecx\n"
		"	movl	%eax, -40(%ebp)\n"
		"	movl	%edx, -36(%ebp)\n"
		"	movl	-36(%ebp), %edx\n"
		"	sarl	$2, %edx\n"
		"	movl	%ecx, %eax\n"
		"	sarl	$31, %eax\n"
		"	subl	%eax, %edx\n"
		"	leal	(%edx,%edx,4), %eax\n"
		"	addl	%eax, %eax\n"
		"	subl	%eax, %ecx\n"
		"	movb	%cl, %al\n"
		"	addb	$48, %al\n"
		"	movb	%al, (%ebx)\n"
		"	incl	%ebx\n"
		"	movl	%edx, %ecx\n"
		"	testl	%edx, %edx\n"
		"	jg	L24\n"
		"	movzbl	(%edi), %ecx\n"
		"	movb	%cl, -25(%ebp)\n"
		"L53:\n"
		"	decl	%ebx\n"
		"	cmpl	$_tmp.2-1, %ebx\n"
		"	jbe	L55\n"
		"	.p2align 4,,15\n"
		"L28:\n"
		"	movzbl	(%ebx), %edx\n"
		"	movb	%dl, (%esi)\n"
		"	incl	%esi\n"
		"	decl	%ebx\n"
		"	cmpl	$_tmp.2-1, %ebx\n"
		"	ja	L28\n"
		"L55:\n"
		"	movb	$58, (%esi)\n"
		"	incl	%esi\n"
		"	movb	$32, (%esi)\n"
		"	incl	%esi\n"
		"	movsbl	-25(%ebp),%ebx\n"
		"	movl	_isdig.3(,%ebx,4), %ecx\n"
		"	testl	%ecx, %ecx\n"
		"	jne	L57\n"
		"	.p2align 4,,15\n"
		"L32:\n"
		"	incl	%edi\n"
		"	movzbl	(%edi), %eax\n"
		"	movb	%al, -25(%ebp)\n"
		"	movsbl	%al,%ebx\n"
		"	movl	_isdig.3(,%ebx,4), %edx\n"
		"	testl	%edx, %edx\n"
		"	je	L32\n"
		"L57:\n"
		"	movsbl	-25(%ebp),%ebx\n"
		"	leal	-48(%ebx), %ecx\n"
		"	incl	%edi\n"
		"	movzbl	(%edi), %edx\n"
		"	movb	%dl, -25(%ebp)\n"
		"	movsbl	%dl,%eax\n"
		"	movl	_isdig.3(,%eax,4), %ebx\n"
		"	testl	%ebx, %ebx\n"
		"	je	L59\n"
		"	movl	%eax, %edx\n"
		"	.p2align 4,,15\n"
		"L37:\n"
		"	leal	(%ecx,%ecx,4), %ebx\n"
		"	leal	-48(%edx,%ebx,2), %ecx\n"
		"	incl	%edi\n"
		"	movzbl	(%edi), %edx\n"
		"	movb	%dl, -25(%ebp)\n"
		"	movsbl	%dl,%ebx\n"
		"	movl	%ebx, %edx\n"
		"	movl	_isdig.3(,%ebx,4), %eax\n"
		"	testl	%eax, %eax\n"
		"	jne	L37\n"
		"L59:\n"
		"	movl	_sol(,%ecx,4), %ebx\n"
		"	movzbl	(%ebx), %eax\n"
		"	testb	%al, %al\n"
		"	je	L61\n"
		"	.p2align 4,,15\n"
		"L42:\n"
		"	incl	%ebx\n"
		"	movb	%al, (%esi)\n"
		"	incl	%esi\n"
		"	movzbl	(%ebx), %eax\n"
		"	testb	%al, %al\n"
		"	jne	L42\n"
		"L61:\n"
		"	movb	$10, (%esi)\n"
		"	incl	%esi\n"
		"	incl	-20(%ebp)\n"
		"	movl	-24(%ebp), %ecx\n"
		"	cmpl	%ecx, -20(%ebp)\n"
		"	jle	L43\n"
		"	jmp	L51\n"
		"L62:\n"
		"	movzbl	_inbuf.0, %eax\n"
		"	movb	%al, -25(%ebp)\n"
		"	jmp	L47\n"
		"L51:\n"
		"	subl	$_outbuf.1, %esi\n"
		"	movl	%esi, 8(%esp)\n"
		"	movl	$_outbuf.1, %esi\n"
		"	movl	%esi, 4(%esp)\n"
		"	movl	$1, (%esp)\n"
		"	call	write\n"
		"	movl	$0, (%esp)\n"
		"	call	exit\n"
		"LC0:\n"
		"	.ascii \"0\\0\"\n"
		"LC1:\n"
		"	.ascii \"1\\0\"\n"
		"LC2:\n"
		"	.ascii \"2\\0\"\n"
		"LC3:\n"
		"	.ascii \"7\\0\"\n"
		"LC4:\n"
		"	.ascii \"28\\0\"\n"
		"LC5:\n"
		"	.ascii \"120\\0\"\n"
		"LC6:\n"
		"	.ascii \"528\\0\"\n"
		"LC7:\n"
		"	.ascii \"2344\\0\"\n"
		"LC8:\n"
		"	.ascii \"10416\\0\"\n"
		"LC9:\n"
		"	.ascii \"46160\\0\"\n"
		"LC10:\n"
		"	.ascii \"203680\\0\"\n"
		"LC11:\n"
		"	.ascii \"894312\\0\"\n"
		"LC12:\n"
		"	.ascii \"3907056\\0\"\n"
		"LC13:\n"
		"	.ascii \"16986352\\0\"\n"
		"LC14:\n"
		"	.ascii \"73512288\\0\"\n"
		"LC15:\n"
		"	.ascii \"316786960\\0\"\n"
		"LC16:\n"
		"	.ascii \"1359763168\\0\"\n"
		"LC17:\n"
		"	.ascii \"5815457184\\0\"\n"
		"LC18:\n"
		"	.ascii \"24788842304\\0\"\n"
		"LC19:\n"
		"	.ascii \"105340982248\\0\"\n"
		"LC20:\n"
		"	.ascii \"446389242480\\0\"\n"
		"LC21:\n"
		"	.ascii \"1886695382192\\0\"\n"
		"LC22:\n"
		"	.ascii \"7955156287456\\0\"\n"
		"LC23:\n"
		"	.ascii \"33468262290096\\0\"\n"
		"LC24:\n"
		"	.ascii \"140516110684832\\0\"\n"
		"LC25:\n"
		"	.ascii \"588832418973280\\0\"\n"
		"LC26:\n"
		"	.ascii \"2463133441338048\\0\"\n"
		"LC27:\n"
		"	.ascii \"10286493304041104\\0\"\n"
		"LC28:\n"
		"	.ascii \"42892130604098656\\0\"\n"
		"LC29:\n"
		"	.ascii \"178592047539343200\\0\"\n"
		"LC30:\n"
		"	.ascii \"742609229473744320\\0\"\n"
		"LC31:\n"
		"	.ascii \"3083957343567791392\\0\"\n"
		"LC32:\n"
		"	.ascii \"12792021060576424896\\0\"\n"
		"LC33:\n"
		"	.ascii \"53000868925259947840\\0\"\n"
		"LC34:\n"
		"	.ascii \"219365134324873522816\\0\"\n"
		"LC35:\n"
		"	.ascii \"907023528883142832360\\0\"\n"
		"LC36:\n"
		"	.ascii \"3746790354386182679408\\0\"\n"
		"LC37:\n"
		"	.ascii \"15463645062002474062384\\0\"\n"
		"LC38:\n"
		"	.ascii \"63767018378178067474656\\0\"\n"
		"LC39:\n"
		"	.ascii \"262742756317344213209200\\0\"\n"
		"LC40:\n"
		"	.ascii \"1081765434874991509707040\\0\"\n"
		"LC41:\n"
		"	.ascii \"4450606984357021640248032\\0\"\n"
		"LC42:\n"
		"	.ascii \"18298022787758605020282816\\0\"\n"
		"LC43:\n"
		"	.ascii \"75179913955330333724697136\\0\"\n"
		"LC44:\n"
		"	.ascii \"308691924054843201409922592\\0\"\n"
		"LC45:\n"
		"	.ascii \"1266737680502193374869298720\\0\"\n"
		"LC46:\n"
		"	.ascii \"5195143014579351011947302208\\0\"\n"
		"LC47:\n"
		"	.ascii \"21294548056433354780482923744\\0\"\n"
		"LC48:\n"
		"	.ascii \"87238762619153966026251258944\\0\"\n"
	//	"	.align 32\n"
		"LC49:\n"
		"	.ascii \"357215388993130669706869321408\\0\"\n"
	//	"	.align 32\n"
		"_sol:\n"
		"	.long	LC0\n"
		"	.long	LC0\n"
		"	.long	LC0\n"
		"	.long	LC0\n"
		"	.long	LC1\n"
		"	.long	LC0\n"
		"	.long	LC2\n"
		"	.long	LC0\n"
		"	.long	LC3\n"
		"	.long	LC0\n"
		"	.long	LC4\n"
		"	.long	LC0\n"
		"	.long	LC5\n"
		"	.long	LC0\n"
		"	.long	LC6\n"
		"	.long	LC0\n"
		"	.long	LC7\n"
		"	.long	LC0\n"
		"	.long	LC8\n"
		"	.long	LC0\n"
		"	.long	LC9\n"
		"	.long	LC0\n"
		"	.long	LC10\n"
		"	.long	LC0\n"
		"	.long	LC11\n"
		"	.long	LC0\n"
		"	.long	LC12\n"
		"	.long	LC0\n"
		"	.long	LC13\n"
		"	.long	LC0\n"
		"	.long	LC14\n"
		"	.long	LC0\n"
		"	.long	LC15\n"
		"	.long	LC0\n"
		"	.long	LC16\n"
		"	.long	LC0\n"
		"	.long	LC17\n"
		"	.long	LC0\n"
		"	.long	LC18\n"
		"	.long	LC0\n"
		"	.long	LC19\n"
		"	.long	LC0\n"
		"	.long	LC20\n"
		"	.long	LC0\n"
		"	.long	LC21\n"
		"	.long	LC0\n"
		"	.long	LC22\n"
		"	.long	LC0\n"
		"	.long	LC23\n"
		"	.long	LC0\n"
		"	.long	LC24\n"
		"	.long	LC0\n"
		"	.long	LC25\n"
		"	.long	LC0\n"
		"	.long	LC26\n"
		"	.long	LC0\n"
		"	.long	LC27\n"
		"	.long	LC0\n"
		"	.long	LC28\n"
		"	.long	LC0\n"
		"	.long	LC29\n"
		"	.long	LC0\n"
		"	.long	LC30\n"
		"	.long	LC0\n"
		"	.long	LC31\n"
		"	.long	LC0\n"
		"	.long	LC32\n"
		"	.long	LC0\n"
		"	.long	LC33\n"
		"	.long	LC0\n"
		"	.long	LC34\n"
		"	.long	LC0\n"
		"	.long	LC35\n"
		"	.long	LC0\n"
		"	.long	LC36\n"
		"	.long	LC0\n"
		"	.long	LC37\n"
		"	.long	LC0\n"
		"	.long	LC38\n"
		"	.long	LC0\n"
		"	.long	LC39\n"
		"	.long	LC0\n"
		"	.long	LC40\n"
		"	.long	LC0\n"
		"	.long	LC41\n"
		"	.long	LC0\n"
		"	.long	LC42\n"
		"	.long	LC0\n"
		"	.long	LC43\n"
		"	.long	LC0\n"
		"	.long	LC44\n"
		"	.long	LC0\n"
		"	.long	LC45\n"
		"	.long	LC0\n"
		"	.long	LC46\n"
		"	.long	LC0\n"
		"	.long	LC47\n"
		"	.long	LC0\n"
		"	.long	LC48\n"
		"	.long	LC0\n"
		"	.long	LC49\n"
		"	.long	LC0\n"
		".lcomm _tmp.2,256\n"
		".lcomm _isdig.3,1024\n"
		".lcomm _inbuf.0,65536\n"
		".lcomm _outbuf.1,131072\n"
	);
	return 0;
}
