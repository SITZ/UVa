#include <bits/stdc++.h>

using namespace std;

const int AutoMorphicLength = 2001;
const char *AutoMorphic[] =
		{
				"603026954569487924380165488488051064862760620827164159\
1325236097905009383854054263247198939318022098236001625\
4517768102915939650450665780903305277219838528634187964\
5511424748536307235457049044509125214234275955491843973\
9844587125286948198269270292552648349032065268512722029\
6131869994777653548129151985764042296818309177344527772\
3200737603825883172729279563657419014445235954319103063\
5724961789882031757877610621377080809678113749319117665\
6303149020578435250957288066846412106925280227506129851\
1616206384006778979402449023875111258689534549514888200\
6786677023410028395492829702864472736252175354431979118\
5506815726485880485267387168480400218852947302222334454\
1221328464844153593793663133604458940328723478401947357\
5603613462120086753733469133143387173508802126002857529\
8538664393102232655345477684502995702556165814337023650\
2074744856814787872902092412582905301249124668868351587\
6774998917686787157281349408792768945297970977723054033\
5661882819870221063055796723980661119019774464242102513\
6748701117131278125400133690086034889084364023875765936\
8219796261819178335204927041993248752378258671482789053\
4489744014261231703569954841949944461060814620725403655\
9998271588356035049327795540741961849280952093753026852\
3909375628391485716123673519706092242423987770075749557\
8727155976741345899753769551586271888794151630756966881\
6352155048898271704378508028434084412644126821848514157\
7299160344970178923357966849914473895660019325458276780\
0061832985442623282725755611073316069701586498422229125\
5485729879337147866323172405515756102352543994999345608\
0838011907415300600560557448187096927850997759180500754\
1642852770816201135024680605816327617167676526093752805\
6844214486193960499834472806721906670417240094234466197\
8124266907875359446166985080646361371663840490292193418\
8190958165952447786184614091287829843843170324817342888\
6572737663146519104988029447960814673760503957196893714\
6718013756190554629968147642639039530073191081698029385\
0989006216650958086381100055742342323089610900410661997\
7392256259918212890625",
				"396973045430512075619834511511948935137239379172835840\
8674763902094990616145945736752801060681977901763998374\
5482231897084060349549334219096694722780161471365812035\
4488575251463692764542950955490874785765724044508156026\
0155412874713051801730729707447351650967934731487277970\
3868130005222346451870848014235957703181690822655472227\
6799262396174116827270720436342580985554764045680896936\
4275038210117968242122389378622919190321886250680882334\
3696850979421564749042711933153587893074719772493870148\
8383793615993221020597550976124888741310465450485111799\
3213322976589971604507170297135527263747824645568020881\
4493184273514119514732612831519599781147052697777665545\
8778671535155846406206336866395541059671276521598052642\
4396386537879913246266530866856612826491197873997142470\
1461335606897767344654522315497004297443834185662976349\
7925255143185212127097907587417094698750875331131648412\
3225001082313212842718650591207231054702029022276945966\
4338117180129778936944203276019338880980225535757897486\
3251298882868721874599866309913965110915635976124234063\
1780203738180821664795072958006751247621741328517210946\
5510255985738768296430045158050055538939185379274596344\
0001728411643964950672204459258038150719047906246973147\
6090624371608514283876326480293907757576012229924250442\
1272844023258654100246230448413728111205848369243033118\
3647844951101728295621491971565915587355873178151485842\
2700839655029821076642033150085526104339980674541723219\
9938167014557376717274244388926683930298413501577770874\
4514270120662852133676827594484243897647456005000654391\
9161988092584699399439442551812903072149002240819499245\
8357147229183798864975319394183672382832323473906247194\
3155785513806039500165527193278093329582759905765533802\
1875733092124640553833014919353638628336159509707806581\
1809041834047552213815385908712170156156829675182657111\
3427262336853480895011970552039185326239496042803106285\
3281986243809445370031852357360960469926808918301970614\
9010993783349041913618899944257657676910389099589338002\
2607743740081787109376"};

bool isAutoMorphic(int index, char *arg, int len)
{
	for (int i = AutoMorphicLength - 1, j = len - 1; j >= 0; j--, i--)
	{
		if (AutoMorphic[index][i] != arg[j])
		{
			return false;
		}
	}
	return true;
}

int main()
{
	char input[2010];
	int len;
	bool isAM;
	while (!feof(stdin))
	{
		if (scanf("%s", input) == EOF)
		{
			break;
		}
		len = strlen(input);
		switch (input[len - 1])
		{
		case '5':
			isAM = isAutoMorphic(0, input, len);
			break;
		case '6':
			isAM = isAutoMorphic(1, input, len);
			break;
		default:
			isAM = false;
		}
		if (isAM)
		{
			printf("Automorphic number of %d-digit.\n", len);
		}
		else
		{
			printf("Not an Automorphic number.\n");
		}
	}
	return 0;
}
